@mixin transition($elem, $time, $type, $delay) {
  -webkit-transition: $elem #{$time}s $type $delay;
  -moz-transition: $elem #{$time}s $type $delay;
  -o-transition: $elem #{$time}s $type $delay;
  transition: $elem #{$time}s $type $delay;
}

@mixin border-radius($var) {
  -moz-border-radius: $var;
  -webkit-border-radius: $var;
  -khtml-border-radius: $var;
  border-radius: $var;
}

@mixin border-radius-top($var) {
  -webkit-border-top-left-radius: $var;
  -webkit-border-top-right-radius: $var;
  -moz-border-radius-topleft: $var;
  -moz-border-radius-topright: $var;
  border-top-left-radius: $var;
  border-top-right-radius: $var;
}

@mixin border-radius-bottom($var) {
  -webkit-border-bottom-left-radius: $var;
  -webkit-border-bottom-right-radius: $var;
  -moz-border-radius-bottomleft: $var;
  -moz-border-radius-bottomright: $var;
  border-bottom-left-radius: $var;
  border-bottom-right-radius: $var;
}

@mixin border-radius-left($var) {
  -webkit-border-top-left-radius: $var;
  -webkit-border-bottom-left-radius: $var;
  -moz-border-radius-topleft: $var;
  -moz-border-radius-bottomleft: $var;
  border-top-left-radius: $var;
  border-bottom-left-radius: $var;
}

@mixin border-radius-right($var) {
  -webkit-border-top-right-radius: $var;
  -webkit-border-bottom-right-radius: $var;
  -moz-border-radius-topright: $var;
  -moz-border-radius-bottomright: $var;
  border-top-right-radius: $var;
  border-bottom-right-radius: $var;
}

@mixin position($top, $right, $bottom, $left) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin opacity($param) {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=$param*100)";
  filter: alpha(opacity=$param*100);
  -moz-opacity: $param;
  -khtml-opacity: $param;
  opacity: $param;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: "") {

  -webkit-box-shadow: $top $left $blur $color #{$inset};
  -moz-box-shadow: $top $left $blur $color #{$inset};
  box-shadow: $top $left $blur $color #{$inset};
}

@mixin clear {
  &:after {
    content: '';
    display: block;
    clear: both;
  }
}

@mixin blur($radius) {
  filter: blur($radius);
  -webkit-filter: blur($radius);
  -moz-filter: blur($radius);
  -o-filter: blur($radius);
  -ms-filter: blur($radius);
}

@mixin no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin blurForFF($radius) {

  filter: url(../svg/blur.svg#blur);
  filter: progid:DXImageTransform.Microsoft.Blur(PixelRadius='$radius');
}

@mixin placeholderColor($color) {
  &::-webkit-input-placeholder {
    /* WebKit browsers */
    color: $color;
  }
  &:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    color: $color;
    opacity: 1;
  }
  &::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    color: $color;
    opacity: 1;
  }
  &:-ms-input-placeholder {
    /* Internet Explorer 10+ */
    color: $color;
  }
}

@mixin placeholderFont($family, $size) {
  &::-webkit-input-placeholder {
    /* WebKit browsers */
    font-family: $family;
    font-size: $size;
  }
  &:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    font-family: $family;
    font-size: $size;
  }
  &::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    font-family: $family;
    font-size: $size;
  }
  &:-ms-input-placeholder {
    /* Internet Explorer 10+ */
    font-family: $family;
    font-size: $size;
  }
}

@mixin placeholderTextTransform($transform) {
  &::-webkit-input-placeholder {
    /* WebKit browsers */
    text-transform: $transform;
  }
  &:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    text-transform: $transform;
  }
  &::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    text-transform: $transform;
  }
  &:-ms-input-placeholder {
    /* Internet Explorer 10+ */
    text-transform: $transform;
  }
}